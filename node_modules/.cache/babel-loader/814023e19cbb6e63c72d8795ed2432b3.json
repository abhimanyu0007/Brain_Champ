{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\react\\\\smartbrain\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport FacesDetected from './components/FacesDetected/FacesDetected';\nimport 'tachyons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = apiData => {\n      const regions = apiData.outputs[0].data.regions;\n      const image = document.getElementById(\"inputimage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const faceLocations = regions.map(region => {\n        const box = region.region_info.bounding_box;\n        return {\n          leftCol: box.left_col * width,\n          topRow: box.top_row * height,\n          rightCol: width - box.right_col * width,\n          bottomRow: height - box.bottom_row * height\n        };\n      });\n      return faceLocations;\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count_value => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count_value\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FacesDetected, {\n          numFaces: this.state.boxes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: this.state.boxes,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 117\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/prati/react/smartbrain/smartbrain/src/App.js"],"names":["React","Component","Particles","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","FaceRecognition","FacesDetected","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","apiData","regions","outputs","image","document","getElementById","width","Number","height","faceLocations","map","region","box","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count_value","Object","assign","catch","console","log","err","onRouteChange","render","length"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport FacesDetected from './components/FacesDetected/FacesDetected';\nimport 'tachyons';\n\nconst particlesOptions={\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState={\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  } \n}\nclass App extends Component{\n  constructor(){\n    super();\n    this.state= initialState;\n    \n  }\n\n  loadUser =(data) =>{\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation= (apiData)=>{\n    const regions= apiData.outputs[0].data.regions;\n    const image= document.getElementById(\"inputimage\");\n    const width= Number(image.width);\n    const height= Number(image.height);\n\n    const faceLocations = regions.map(region =>{\n      const box = region.region_info.bounding_box;\n      return{\n        leftCol: box.left_col * width,\n        topRow: box.top_row * height,\n        rightCol: width - (box.right_col * width),\n        bottomRow: height - (box.bottom_row * height)\n      };\n    });\n    return faceLocations;\n  }\n  displayFaceBox= (boxes)=>{\n    this.setState({boxes: boxes});\n  }\n  onInputChange =(event)=>{\n    this.setState({input: event.target.value});\n  }\n  \n  onButtonSubmit =()=>{\n    this.setState({imageUrl: this.state.input});\n      fetch('http://localhost:3000/imageurl',{\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n            input: this.state.input\n        })\n      }).then(response => response.json())\n    \n  .then((response)=>{\n    if(response){\n      fetch('http://localhost:3000/image',{\n        method: 'put',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n\n            id: this.state.user.id\n        })\n      })\n      .then(response =>response.json())\n      .then(count_value =>{\n        this.setState(Object.assign(this.state.user,{entries: count_value }))\n      })\n      .catch(console.log)\n    }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n  .catch(err=>console.log(err));\n  }\n  \n  onRouteChange =(route) =>{\n    if(route === 'signin'){\n      this.setState(initialState);\n    }\n    else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n    render(){\n\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n            {this.state.route === 'home'\n            ? \n                <div> \n                  <Logo/>\n                  <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n                  <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n                  <FacesDetected numFaces={this.state.boxes.length}/>\n                  <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl}/>\n                </div> \n            \n                \n          : (\n            this.state.route === 'signin' ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}