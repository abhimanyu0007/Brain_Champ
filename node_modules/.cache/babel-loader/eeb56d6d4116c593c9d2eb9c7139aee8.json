{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prati\\\\react\\\\smartbrain\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport 'tachyons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'b81051f4139a4a1dbddf3d9f99b095f4'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      //console.log(i);\n      data.outputs[0].data.regions.forEach(function differentfaces(item) {\n        const clarifaiFace = item.region_info.bounding_box;\n        const image = document.getElementById(\"inputimage\");\n        const width = Number(image.width);\n        const height = Number(image.height);\n        console.log(width, height);\n      });\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      }; /////////////////////////////////*****//////////////////////////////\n      // console.log(data.outputs[0].data.regions.length);\n      // const clarifaiFace =  data.outputs[0].data.regions[1].region_info.bounding_box;\n      // const image= document.getElementById(\"inputimage\");\n      // const width= Number(image.width);\n      // const height= Number(image.height);\n      // console.log(width,height);\n      // return{\n      //   leftCol: clarifaiFace.left_col * width,\n      //   topRow: clarifaiFace.top_row * height,\n      //   rightCol: width - (clarifaiFace.right_col * width),\n      //   bottomRow: height - (clarifaiFace.bottom_row * height) \n      // }\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); // app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      // app.models.predict(Clarifai.CELEBRITY_MODEL, this.state.input)\n      // .then(\n      //   function(response){\n      //     console.log(response); 475328\n      //   }\n      // )\n\n      app.models.predict({\n        id: \"f76196b43bbd45c99b4f3cd8e8b40a8a\",\n        version: \"5e026c5fae004ed4a83263ebaabec49e\"\n      }, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count_value => {\n            //refer video 301, just after 7:32\n            //count is just like reference, means entries: 0 at starting, then that 0 is just like count\n            //in server.js, user.entries++ means entires object's value is incremented\n            //refer .then ss in javascript folder\n            this.setState(Object.assign(this.state.user, {\n              entries: count_value\n            }));\n          });\n        } // for(var i=0;i<response.outputs[0].data.regions.length;i++){\n        //   this.displayFaceBox(this.calculateFaceLocation(response, i))\n        // }\n\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  //for understanding .then func syntax google: .then method in javascript.\n  //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  //console.log(response);\n  render() {\n    // use of destructuring\n    // const {isSignedIn,imageUrl, etc} = this.state;\n    // \"this.state.isSignedIn\" can be written as only \"isSignedIn\"\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 117\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/prati/react/smartbrain/smartbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","outputs","regions","forEach","differentfaces","item","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","version","then","response","fetch","method","headers","body","JSON","stringify","json","count_value","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport 'tachyons';\n\nconst app = new Clarifai.App({\n  apiKey: 'b81051f4139a4a1dbddf3d9f99b095f4'\n });\n\n\nconst particlesOptions={\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser =(data) =>{\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3000/')\n  //     .then(response=> response.json())\n  //     .then(console.log)\n  // }\n\n  calculateFaceLocation= (data)=>{\n    //console.log(i);\n    data.outputs[0].data.regions.forEach(function differentfaces(item){\n      const clarifaiFace =  item.region_info.bounding_box;\n      const image= document.getElementById(\"inputimage\");\n      const width= Number(image.width);\n      const height= Number(image.height);\n      console.log(width,height);\n    });\n      return{\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height) \n      }\n    /////////////////////////////////*****//////////////////////////////\n    // console.log(data.outputs[0].data.regions.length);\n    // const clarifaiFace =  data.outputs[0].data.regions[1].region_info.bounding_box;\n    // const image= document.getElementById(\"inputimage\");\n    // const width= Number(image.width);\n    // const height= Number(image.height);\n    // console.log(width,height);\n    // return{\n    //   leftCol: clarifaiFace.left_col * width,\n    //   topRow: clarifaiFace.top_row * height,\n    //   rightCol: width - (clarifaiFace.right_col * width),\n    //   bottomRow: height - (clarifaiFace.bottom_row * height) \n    // }\n  }\n  displayFaceBox= (box)=>{\n    console.log(box);\n    this.setState({box: box});\n  }\n  onInputChange =(event)=>{\n    this.setState({input: event.target.value});\n  }\n\n\n//onPictureSubmit name looks better then onButtonSubmit\n  onButtonSubmit =()=>{\n    this.setState({imageUrl: this.state.input});\n    // app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    // app.models.predict(Clarifai.CELEBRITY_MODEL, this.state.input)\n    // .then(\n    //   function(response){\n    //     console.log(response); 475328\n    //   }\n    // )\n    app.models.predict(\n    {\n      id: \"f76196b43bbd45c99b4f3cd8e8b40a8a\",\n      version: \"5e026c5fae004ed4a83263ebaabec49e\",\n    },this.state.input\n  )\n  .then((response)=>{\n    if(response){\n      fetch('http://localhost:3000/image',{\n        method: 'put',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n            id: this.state.user.id\n        })\n      })\n      .then(response =>response.json())\n      .then(count_value =>{\n        //refer video 301, just after 7:32\n        //count is just like reference, means entries: 0 at starting, then that 0 is just like count\n        //in server.js, user.entries++ means entires object's value is incremented\n        //refer .then ss in javascript folder\n        this.setState(Object.assign(this.state.user,{entries: count_value }))\n      })\n    }\n    // for(var i=0;i<response.outputs[0].data.regions.length;i++){\n    //   this.displayFaceBox(this.calculateFaceLocation(response, i))\n    // }\n    this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n  .catch(err=>console.log(err));\n  }\n  \n  onRouteChange =(route) =>{\n    if(route === 'signout'){\n      this.setState({isSignedIn: false})\n    }\n    else if(route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  //for understanding .then func syntax google: .then method in javascript.\n        //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n        //console.log(response);\n\n    render(){\n      // use of destructuring\n      // const {isSignedIn,imageUrl, etc} = this.state;\n      // \"this.state.isSignedIn\" can be written as only \"isSignedIn\"\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n              params={particlesOptions}\n            />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        {this.state.route === 'home'\n        ? <div>\n            <Logo/>\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n          </div> \n          : (\n            this.state.route === 'signin' ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}